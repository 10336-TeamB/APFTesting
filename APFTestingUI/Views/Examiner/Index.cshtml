@model APFTestingUI.Models.Examiner.Index

@{
    ViewBag.Title = "Examiner Home";
}

<hgroup>
<h1>Hello @ViewBag.ExaminerName!</h1>
<h3>Welcome to the Examiner home page!</h3>
</hgroup>

<p class="add-candidates-container">
@if (Model.PilotAuthorised)
{
    @Html.ActionLink("Add Pilot Candidate", "CreatePilot", "Candidate", new { }, new { @class="button-add" })
}



@if (Model.PackerAuthorised)
{
    @Html.ActionLink("Add Packer Candidate", "CreatePacker", "Candidate", new { }, new { @class="button-add" })
}
</p>

<div id="candidate-list-wrapper-pilot" class="candidate-list-wrapper">
@if (Model.PilotCandidates.Count() > 0)
{
    <h2>Pilot Candidates</h2>
    <table id="candidate-list-pilot" class="candidate-list">
        <thead>
            <tr>
                <th>Name</th>
                <th>Theory Exam</th>
                <th>View Result</th>
                <th colspan="2">Practical Exam</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var candidate in Model.PilotCandidates)
            {
                var candidateName = candidate.FirstName + " " + candidate.LastName;
                <tr class="candidate-list-item">
                    <td class="candidate-name">
                        @Html.ActionLink(candidateName, "ViewPilot", "Candidate", new { candidateId = candidate.Id }, new { })  
                    </td>
                    <td class="start-theory-link">
                    
                        @if (candidate.ExamNullOrCreated)
                        {
                            @Html.ActionLink("Start Exam", "Start", "Exam", new { examinerId = Model.ExaminerId, candidateId = candidate.Id }, new { @class = "examinerButton" })
                        }
                        else if (candidate.TheoryComponentInProgress)
                        {
                            @Html.ActionLink("Resume Exam", "Resume", "Exam", new { examId = candidate.LatestExamId }, new { @class = "examinerButton" })
                        }
                        else if (candidate.TheoryComponentFailed)
                        {
                            @Html.ActionLink("Retake Exam", "Start", "Exam", new { examinerId = Model.ExaminerId, candidateId = candidate.Id }, new { @class = "examinerButton" })
                        }
                    </td>
                    <td class="view-results-link">
                        @if (candidate.TheoryPassed || candidate.TheoryComponentFailed)
                        {
                            @Html.ActionLink("View Results", "Result", "Exam", new { examId = candidate.LatestExamId }, new { @class = "examinerButton" })
                        }
                    </td>
                    <td class="input-practical-link">
                        @if (candidate.TheoryPassed)
                        {
                            @Html.ActionLink("Input Practical Results", "PilotInput", "Practical", new { examId = candidate.LatestExamId, candidateId = candidate.Id }, new { @class = "examinerButton" })
                        }
                    
                    </td>
                    <td class="reset-cell">@Html.ActionLink("Reset exam", "Reset", "Reset", new { examId = candidate.LatestExamId }, new { @class = "examinerButton reset" })</td>
                </tr>
            }
        </tbody>
    </table>
}
</div>

<div id="candidate-list-wrapper-packer" class="candidate-list-wrapper">
@if (Model.PackerCandidates.Count() > 0)
{
    <h2>Packer Candidates</h2>
    <table id="candidate-list-packer" class="candidate-list">
        <thead>
            <tr>
                <th>Name</th>
                <th>Theory Exam</th>
                <th>View Result</th>
                <th colspan="2">Practical Exam</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var candidate in Model.PackerCandidates)
            {
                var candidateName = candidate.FirstName + " " + candidate.LastName;
                <tr class="candidate-list-item">
                    <td class="candidate-name">
                        @Html.ActionLink(candidateName, "ViewPacker", "Candidate", new { candidateId = candidate.Id }, new { })
                    </td>
                    <td class="start-theory-link">
                    
                        @if (candidate.ExamNullOrCreated)
                        {
                            @Html.ActionLink("Start Exam", "Start", "Exam", new { examinerId = Model.ExaminerId, candidateId = candidate.Id }, new { @class = "examinerButton" })
                        }
                        else if (candidate.TheoryComponentInProgress)
                        {
                            @Html.ActionLink("Resume Exam", "Resume", "Exam", new { examId = candidate.LatestExamId }, new { @class = "examinerButton" })
                        }
                        else if (candidate.TheoryComponentFailed)
                        {
                            @Html.ActionLink("Retake Exam", "Start", "Exam", new { examinerId = Model.ExaminerId, candidateId = candidate.Id }, new { @class = "examinerButton" })
                        }
                    </td>
                    <td class="view-results-link">
                        @if (candidate.TheoryPassed || candidate.TheoryComponentFailed)
                        {
                            @Html.ActionLink("View Results", "Result", "Exam", new { examId = candidate.LatestExamId }, new { @class = "examinerButton" })
                        }
                    </td>
                    <td class="input-practical-link">
                        @if (candidate.TheoryPassed)
                        {
                            @Html.ActionLink("Input Practical Results", "PackerView", "Practical", new { examId = candidate.LatestExamId }, new { @class = "examinerButton" })
                        }
                    </td>
                    
                    <td class="reset-cell">@Html.ActionLink("Reset exam", "Reset", "Reset", new { examId = candidate.LatestExamId }, new { @class = "examinerButton reset" })</td>
                </tr>
            }
        </tbody>
    </table>
}
</div>