@model APFTestingUI.Models.Practical.PackerInput

@{
    ViewBag.Title = "Packer Input";
}

@section styles {
    @Styles.Render("~/Content/themes/base/css")
}

<h1>Packer Input</h1>

@using (Html.BeginForm("PackerInput", "Practical", FormMethod.Post, new { id = "form-packer-input" }))
{
    @Html.ValidationSummary(false)

    <fieldset>
        <legend>PackerInput</legend>

        @Html.HiddenFor(model => model.ExamId)

        <div class="editor-label">
            @Html.LabelFor(model => model.Date)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Date)
            @Html.ValidationMessageFor(model => model.Date)
        </div>
        <div class="clear"></div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CanopyType)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.CanopyType, Model.CanopyTypeList, "--Select--")
            @Html.ValidationMessageFor(model => model.CanopyType)
        </div>
        <div class="clear"></div>

        <div class="editor-label">
            @*@Html.LabelFor(model => model.CanopyTypeOther)*@
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.CanopyTypeOther, new { placeholder = "[ Other canopy type ]" })
            @Html.ValidationMessageFor(model => model.CanopyTypeOther)
        </div>
        <div class="clear"></div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CanopyTypeSerialNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CanopyTypeSerialNumber)
            @Html.ValidationMessageFor(model => model.CanopyTypeSerialNumber)
        </div>
        <div class="clear"></div>

        <div class="editor-label">
            @Html.LabelFor(model => model.HarnessContainerType)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.HarnessContainerType, Model.HarnessContainerTypeList, "--Select--")
            @Html.ValidationMessageFor(model => model.HarnessContainerType)
        </div>
        <div class="clear"></div>

        <div class="editor-label">
            @*@Html.LabelFor(model => model.HarnessContainerTypeOther)*@
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.HarnessContainerTypeOther, new { placeholder = "[ Other harness/container type ]" })
            @Html.ValidationMessageFor(model => model.HarnessContainerTypeOther)
        </div>
        <div class="clear"></div>

        <div class="editor-label">
            @Html.LabelFor(model => model.HarnessContainerSerialNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.HarnessContainerSerialNumber)
            @Html.ValidationMessageFor(model => model.HarnessContainerSerialNumber)
        </div>
        <div class="clear"></div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Note)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Note)
            @Html.ValidationMessageFor(model => model.Note)
        </div>
        <div class="clear"></div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SupervisorId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SupervisorId)
            @Html.ValidationMessageFor(model => model.SupervisorId)
        </div>
        <div class="clear"></div>

        <p class="button-container">
            @Html.ActionLink("Cancel", "PackerView", new { examId = @Model.ExamId }, new { @class = "form-button" })
            <input type="submit" value="Create" class="form-button" />
        </p>
    </fieldset>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/Scripts/practical-packer.js")

}
