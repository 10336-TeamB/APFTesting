@model APFTestingUI.Models.Practical.PackerEdit

@{
    ViewBag.Title = "Packer Edit";
}

@section styles {
    @Styles.Render("~/Content/themes/base/css")
}

<h2>Packer Edit</h2>

@using (Html.BeginForm("PackerEdit", "Practical", new { taskId = Model.TaskId }, FormMethod.Post, new { id = "form-packer-edit" }))
{
    @Html.ValidationSummary(false)

    <fieldset>
        <legend>PackerEdit</legend>

        @Html.HiddenFor(model => model.ExamId)
        @Html.HiddenFor(model => model.TaskId)

        <div class="editor-label">
            @Html.LabelFor(model => model.Date)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Date)
            @Html.ValidationMessageFor(model => model.Date)
        </div>
        <div class="clear"></div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CanopyType)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.CanopyType, Model.CanopyTypeList)
            @Html.ValidationMessageFor(model => model.CanopyType)
        </div>
        <div class="clear"></div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CanopyTypeOther)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CanopyTypeOther)
            @Html.ValidationMessageFor(model => model.CanopyTypeOther)
        </div>
        <div class="clear"></div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CanopyTypeSerialNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CanopyTypeSerialNumber)
            @Html.ValidationMessageFor(model => model.CanopyTypeSerialNumber)
        </div>
        <div class="clear"></div>

        <div class="editor-label">
            @Html.LabelFor(model => model.HarnessContainerType)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.HarnessContainerType, Model.HarnessContainerTypeList)
            @Html.ValidationMessageFor(model => model.HarnessContainerType)
        </div>
        <div class="clear"></div>

        <div class="editor-label">
            @Html.LabelFor(model => model.HarnessContainerTypeOther)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.HarnessContainerTypeOther)
            @Html.ValidationMessageFor(model => model.HarnessContainerTypeOther)
        </div>
        <div class="clear"></div>

        <div class="editor-label">
            @Html.LabelFor(model => model.HarnessContainerSerialNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.HarnessContainerSerialNumber)
            @Html.ValidationMessageFor(model => model.HarnessContainerSerialNumber)
        </div>
        <div class="clear"></div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Note)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Note)
            @Html.ValidationMessageFor(model => model.Note)
        </div>
        <div class="clear"></div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SupervisorId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SupervisorId)
            @Html.ValidationMessageFor(model => model.SupervisorId)
        </div>
        <div class="clear"></div>
        
        <p class="button-container">
            <input type="submit" value="Save" class="examinerButton form-submit" />
        </p>
    </fieldset>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/Scripts/practical-packer.js")
}
